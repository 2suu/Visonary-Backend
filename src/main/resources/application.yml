spring:
  application:
    name: visionary
# 기본 활성 프로필
  profiles:
    default: local

  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    time-zone: Asia/Seoul

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate   # 스키마는 Flyway로 관리, JPA는 검증만
    properties:
      hibernate:
        format_sql: true
        jdbc.time_zone: Asia/Seoul

  flyway:
    enabled: true
    locations: classpath:db/migration
    clean-disabled:  false

server:
  port: 8080

management:           # Actuator
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,loggers,threaddump,httpexchanges
  endpoint:
    health:
      show-details: when_authorized

jwt:
  issuer: "visionary"
  access-token-expiration-ms: 1800000     # 30분
  refresh-token-expiration-ms: 604800000  # 7일
  access-token-header: "Authorization"
  refresh-token-cookie: "Refresh-Token"
  secret: "${JWT_SECRET}"  # 환경변수로 덮어쓰기

firebase:
  enabled: false   # 공통으로 쓰려면 true, 운영에서 안 쓰면 false
  credentials:
    path: ${FIREBASE_CREDENTIALS_PATH:}      # 파일 경로 or classpath
    base64: ${FIREBASE_CREDENTIALS_BASE64:}  # 환경변수 방식일 때만

logging:
  level:
    org.hibernate.SQL: info
    org.hibernate.orm.jdbc.bind: info  # 파라미터 로깅(개발 중에만 올리기)

# Swagger 설정
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui
#  packages-to-scan: esu.visionary.api  # 컨트롤러 패키지 루트
#  default-consumes-media-type: application/json
#  default-produces-media-type: application/json

app:
  api:
    title: Visionary API
    description: Career/Assessment backend
    version: v1
    server-url: http://localhost:8080
